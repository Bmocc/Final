
import requests
import json


class AccessApi:
    """
    Class AccessApi is used to abstract lower level access to course required API

    Attributes
    ----------
    url : str
        A valid website used to hold the courses json filesS

    Methods
    -------
    url_active()
        returns True if the url is currently responding without errors, and False if not.

    get_end_point(endpoint)
        returns the json output of the GET request

    """
    def __init__(self, url):
        """
        Parameters
        ----------
        url: str
           a valid website forexample: http://google.com
        """
        self.url = url

    @property
    def url(self) -> str:
        

    @url.setter
    def url(self, url: str):
        

    def url_active(self) -> bool:
       

    def get_end_point(self, end_point:str) -> dict:
        """
            Parameters
            ----------
            end_point: str
               a valid endpoint on a website  "api/sites/master.json"
        """
      
    def get_status_code(self, end_point:str) -> int:
        """
            Parameters
            ----------
            end_point: str
               a valid endpoint on a website  "api/sites/master.json"
        """


    def get_elapsed_time(self, end_point:str) -> float:
        """
            Parameters
            ----------
            end_point: str
               a valid endpoint on a website  "api/sites/master.json"
        """



--------------------------------------------------------------------------------------
Part 2

from functions import AccessApi as mws
import pytest

base_url: str = "https://raw.githubusercontent.com/bclipp/"
billing_end_point: str = "APItesting/master/getBillingInfo.json"
customer_end_point: str = "APItesting/master/getCustomers.json"
site_end_point: str = "APItesting/master/getSites.json"

# TASK 2

# billing
def test_billing_status_code():

def test_billing_validate_schema():

def test_billing_validate_ssn():

def test_billing_validate_time():


# customers
def test_customers_status_code():

def test_customers_validate_schema():

def test_customers_validate_ssn():

def test_customers_validate_time():


# site
def test_site_status_code():

def test_site_validate_schema():

def test_site_validate_ssn():

def test_site_validate_time():

    
# task 3
@pytest.mark.parametrize('base_url', [base_url])
@pytest.mark.parametrize('billing_end_point', [billing_end_point, customer_end_point, site_end_point])


@pytest.mark.parametrize('base_url', [base_url])
@pytest.mark.parametrize('billing_end_point',[billing_end_point,customer_end_point,site_end_point])
def test_billing_validate_time(base_url,billing_end_point):

